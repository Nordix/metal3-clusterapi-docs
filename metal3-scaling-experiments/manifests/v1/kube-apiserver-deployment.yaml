apiVersion: v1
kind: Service
metadata:
  name: test-kube-apiserver
  labels:
    app: test-kube-apiserver
spec:
  ports:
  - port: 6443
    name: https
  selector:
    app: test-kube-apiserver
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: test-kube-apiserver
  name: test-kube-apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      app: test-kube-apiserver
  strategy: {}
  template:
    metadata:
      labels:
        app: test-kube-apiserver
    spec:
      containers:
      - image: registry.k8s.io/kube-apiserver:v1.25.3
        name: kube-apiserver
        ports:
        - containerPort: 6443
          name: https
          protocol: TCP
        command:
        - kube-apiserver
        - --allow-privileged=true
        - --authorization-mode=Node,RBAC
        - --client-ca-file=/etc/kubernetes/pki/ca/tls.crt
        - --enable-admission-plugins=NodeRestriction
        - --enable-bootstrap-token-auth=true
        - --etcd-cafile=/etc/kubernetes/pki/etcd-ca/tls.crt
        - --etcd-certfile=/etc/kubernetes/pki/etcd/tls.crt
        - --etcd-keyfile=/etc/kubernetes/pki/etcd/tls.key
        - --etcd-servers=https://etcd-server.metal3.svc.cluster.local:2379
        - --runtime-config=
        - --service-account-issuer=https://kubernetes.default.svc.cluster.local
        - --service-account-key-file=/etc/kubernetes/pki/sa/tls.crt
        - --service-account-signing-key-file=/etc/kubernetes/pki/sa/tls.key
        - --service-cluster-ip-range=10.96.0.0/16
        - --tls-cert-file=/etc/kubernetes/pki/k8s/tls.crt
        - --tls-private-key-file=/etc/kubernetes/pki/k8s/tls.key
        resources: {}
        volumeMounts:
        - mountPath: /etc/kubernetes/pki/etcd-ca
          name: etcd-certs
          readOnly: true
        - mountPath: /etc/kubernetes/pki/etcd
          name: etcd-client
          readOnly: true
        - mountPath: /etc/kubernetes/pki/ca/tls.crt
          name: ca
          subPath: tls.crt
          readOnly: true
        - mountPath: /etc/kubernetes/pki/sa
          name: sa-certs
          readOnly: true
        - mountPath: /etc/kubernetes/pki/k8s
          name: k8s-certs
          readOnly: true
      volumes:
      - name: etcd-certs
        secret:
          secretName: test-etcd
      - name: etcd-client
        secret:
          secretName: apiserver-etcd-client
      - name: ca
        secret:
          secretName: test-ca
      - name: sa-certs
        secret:
          secretName: test-sa
      - name: k8s-certs
        secret:
          secretName: apiserver
status: {}
